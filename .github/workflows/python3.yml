name: Python3

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                  python-version: '3.x'

            - name: Cache Poetry
              id: cache-poetry
              uses: actions/cache@v3
              with:
                  path: |
                      ~/.cache/pypoetry
                      ~/.venv
                  key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-poetry-

            - name: Install Poetry
              if: steps.cache-poetry.outputs.cache-hit != 'true'
              run: curl -sSL https://install.python-poetry.org | python3 -

            - name: Cache Python packages
              id: cache-pip
              uses: actions/cache@v3
              with:
                  path: ~/.cache/pypoetry/virtualenvs
                  key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}-pip
                  restore-keys: |
                      ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

            - name: Install dependencies
              run: poetry install

            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: '18'

            - name: Install gherkin-lint
              run: npm install

            - name: Run linters
              run: poetry run pre-commit

            - name: Run tests
              run: poetry run behave
              env:
                  HEADLESS: "True"

            # Optional: Run SonarQube analysis if you have it configured
            # - name: Run SonarQube Scanner
            #   env:
            #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #   run: |
            #     poetry run sonar-scanner \
            #     -Dsonar.projectKey=my_python_project \
            #     -Dsonar.sources=. \
            #     -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            #     -Dsonar.login=${{ secrets.SONAR_TOKEN }}
