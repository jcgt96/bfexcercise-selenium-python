name: Python3

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Set up Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: '18'
                    cache: 'npm'

            -   name: Install gherkin-lint
                run: npm install

            -   name: Install poetry
                run: pipx install poetry

            -   name: Set up Python
                uses: actions/setup-python@v5
                with:
                    python-version: '3.x'
                    cache: poetry
                    cache-dependency-path: poetry.lock

            -   name: Install dependencies
                run: poetry install

            -   name: Run linters
                run: poetry run pre-commit run --all-files
                continue-on-error: false

            -   name: Run tests
                run: poetry run behave
                env:
                    HEADLESS: "True"
                if: success()

            # Optional: Run SonarQube analysis if you have it configured
            # - name: Run SonarQube Scanner
            #   env:
            #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            #   run: |
            #     poetry run sonar-scanner \
            #     -Dsonar.projectKey=my_python_project \
            #     -Dsonar.sources=. \
            #     -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            #     -Dsonar.login=${{ secrets.SONAR_TOKEN }}
